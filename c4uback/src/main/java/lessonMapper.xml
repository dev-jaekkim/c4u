<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.LessonMapper">

<!-- <resultMap type="com.my.vo.Category" id="categoryrm">
	<id property="categoryId" column="category_id"/>
	<result property="categoryName" column="category_name" />
-->
	<resultMap type="com.my.vo.Lesson" id="lessonrmtest">
		<id property="lessonId" column="lesson_id"/>
			<result property="lessonCategory" column="lesson_category_id"/>
			<result property="lessonCreate" column="lesson_create_date"/>
			<result property="lessonEnd" column="lesson_end_date"/>
			<result property="lessonDescription" column="lesson_description"/>
			<result property="lessonFee" column="lesson_fee"/>
			<result property="lessonName" column="lesson_name"/>
			<result property="lessonParticipant" column="lesson_participant"/>
			<result property="lessonRecommend" column="lesson_recommend_cnt"/>
			<result property="lessonStart" column="lesson_start_date"/>
			<result property="lessonStatus" column="lesson_status"/>
			<result property="lessonTargetFee" column="lesson_target_amount"/>
			<result property="lessonTotalFee" column="lesson_total_amount"/>
				<association property="teacher" javaType="Student">
					<id property="studentId" column="lesson_teacher_id"/>
					<result property="studentName" column="student_name"/>
				</association>
				
				<association property="category" javaType="Category" autoMapping="true">
					<id property="categoryId" column="category_id" />
					<result property="categoryName" column="category_name"/>
				</association>
	</resultMap>

<resultMap type="com.my.vo.Lesson" id="lessonrm">
<id property="lessonId" column="lesson_id"/>
<result property="lessonCategory" column="lesson_category_id"/>
<result property="lessonCreate" column="lesson_create_date"/>
<result property="lessonEnd" column="lesson_end_date"/>
<result property="lessonDescription" column="lesson_description"/>
<result property="lessonFee" column="lesson_fee"/>
<result property="lessonName" column="lesson_name"/>
<result property="lessonParticipant" column="lesson_participant"/>
<result property="lessonRecommend" column="lesson_recommend_cnt"/>
<result property="lessonStart" column="lesson_start_date"/>
<result property="lessonStatus" column="lesson_status"/>
<result property="lessonTargetFee" column="lesson_target_amount"/>
<result property="lessonTotalFee" column="lesson_total_amount"/>
<result property="teacher.studentId" column="lesson_teacher_id"/>
<result property="teacher.studentName" column="student_name"/>
<!--<collection property="lessonPenaltyStatus" ofType="com.my.vo.LessonPenaltyStatus" autoMapping="true">
	<id property="lessonPsId" column="lessonps_id" />
</collection>-->
</resultMap>

<!--강좌 전체 조회-->
<select id="selectAll" resultMap="lessonrm">
select * from lesson where lesson_status = 0 order by lesson_end_date
</select>

<!--아이디로 강좌 조회-->
<select id="selectById" resultMap="lessonrmtest" parameterType="java.lang.Integer">
SELECT lesson_id, 
			lesson_teacher_id,
			lesson_name, 
			lesson_total_amount,
			lesson_target_amount, 
			lesson_participant,
			lesson_create_date,
			lesson_end_Date,
			lesson_status, 
			lesson_start_date, 
	        lesson_fee, 
			lesson_description,
	        lesson_category_id,
			lesson_recommend_cnt,
			s.student_name,
			c.category_name
FROM lesson l LEFT JOIN student s ON (l.lesson_teacher_id = s.student_id)
			JOIN category c ON (l.lesson_category_id = c.category_id)
WHERE lesson_id = #{lessonId}



</select>


<!--selectByUnion-->
<select id="selectByUnion" resultMap="lessonrm" parameterType="java.lang.String">
 SELECT *
FROM lesson
WHERE lesson_status = 0 AND (lesson_name LIKE '%'||#{union}||'%'
OR lesson_category_id IN (SELECT category_id FROM category WHERE category_parent_id IN (SELECT category_id FROM category WHERE category_name LIKE '%'||#{union}||'%')) 
OR lesson_category_id IN (SELECT category_id FROM category WHERE category_name LIKE '%'||#{union}||'%')) 
ORDER BY lesson_end_date
</select>

<!--내가 개설한 강좌  -->
<select id="selectByLessonOpen" resultType="map">
SELECT l.lesson_id, c.category_name, l.lesson_name,
       l.lesson_start_date,l.lesson_create_date,l.lesson_end_date,
       l.lesson_fee,l.lesson_participant,l.lesson_target_amount,
       l.lesson_total_amount, l.lesson_status, lp.lp_content, lps.lessonps_date
FROM lesson l
LEFT JOIN lesson_penalty_status lps
     ON l.lesson_id = lps.lessonps_id
LEFT JOIN category c
     ON l.lesson_category_id = c.category_id
LEFT JOIN lesson_penalty lp 
     ON lps.lessonps_evaluation_id = lp.lp_id
LEFT JOIN student s
     ON l.lesson_teacher_id = s.student_id
WHERE s.student_id = #{student_id}
ORDER BY l.lesson_id ASC	
</select>

<!--내가 개설한 강좌 검색  -->
<select id="selectByLessonSearch" resultType="map">
SELECT l.lesson_id, c.category_name, l.lesson_name,
       l.lesson_start_date,l.lesson_create_date,l.lesson_end_date,
       l.lesson_fee,l.lesson_participant,l.lesson_target_amount,
       l.lesson_total_amount, l.lesson_status, lp.lp_content
FROM lesson l
LEFT JOIN lesson_penalty_status lps
     ON l.lesson_id = lps.lessonps_id
LEFT JOIN category c
     ON l.lesson_category_id = c.category_id
LEFT JOIN lesson_penalty lp 
     ON lps.lessonps_evaluation_id = lp.lp_id
LEFT JOIN student s
     ON l.lesson_teacher_id = s.student_id
WHERE (l.lesson_name LIKE '%${word}%' OR c.category_name LIKE '%${word}%')
ORDER BY l.lesson_id ASC
</select>

<!-- 개설성공 -->
<select id="selectByLessonStatus1" resultType="map">
SELECT l.lesson_id, c.category_name, l.lesson_name,
       l.lesson_start_date,l.lesson_create_date,l.lesson_end_date,
       l.lesson_fee,l.lesson_participant,l.lesson_target_amount,
       l.lesson_total_amount, l.lesson_status, lp.lp_content, lps.lessonps_date
FROM lesson l
LEFT JOIN lesson_penalty_status lps
     ON l.lesson_id = lps.lessonps_id
LEFT JOIN category c
     ON l.lesson_category_id = c.category_id
LEFT JOIN lesson_penalty lp 
     ON lps.lessonps_evaluation_id = lp.lp_id
LEFT JOIN student s
     ON l.lesson_teacher_id = s.student_id
WHERE s.student_id = #{student_id}
AND l.lesson_status = #{lesson_status}
ORDER BY l.lesson_id ASC
</select>


<!-- 내가갱설한 강좌 / 체크박스 -->

<select id="selectByLessonStatus01234" resultType="map">
SELECT l.lesson_id, c.category_name, l.lesson_name,
       l.lesson_start_date,l.lesson_create_date,l.lesson_end_date,
       l.lesson_fee,l.lesson_participant,l.lesson_target_amount,
       l.lesson_total_amount, l.lesson_status, lp.lp_content, lps.lessonps_date
FROM lesson l
LEFT JOIN lesson_penalty_status lps
     ON l.lesson_id = lps.lessonps_id
LEFT JOIN category c
     ON l.lesson_category_id = c.category_id
LEFT JOIN lesson_penalty lp 
     ON lps.lessonps_evaluation_id = lp.lp_id
LEFT JOIN student s
      ON l.lesson_teacher_id = s.student_id
WHERE student_id = #{student_id} AND 
<if test="lesson_status != null">
lesson_status IN 
</if>
<foreach collection = "lesson_status" item="status" separator="," open="(" close=")">
#{status}
</foreach>
ORDER BY l.lesson_id ASC
</select>

<!--개설하기-->
<insert id="insert" parameterType="Lesson">
	INSERT INTO lesson (lesson_id, 
			lesson_teacher_id, 
			lesson_name, 
			lesson_target_amount, 
			lesson_status, 
			lesson_start_date, 
	        lesson_fee, 
			lesson_description,
	        lesson_category_id)
	VALUES (seq_lesson_id.NEXTVAL, #{teacher.studentId}, #{lessonName}, 
        		#{lessonTargetFee}, 3, #{lessonStart}, 
      	  		#{lessonFee}, #{lessonDescription},
        		#{lessonCategory})
</insert>

<!--재심사 신청-->
<update id="update" parameterType="Lesson">
	UPDATE lesson
	<set>
		<if test="lessonName != null"> lesson_name =#{lessonName}, </if>
		<if test="lessonTargetFee != null"> lesson_target_amount = #{lessonTargetFee}, </if>
		<if test="lessonStart != null"> lesson_start_date = #{lessonStart}, </if>
		<if test="lessonFee != null"> lesson_fee = #{lessonFee}, </if>
		<if test="lessonDescription != null"> lesson_description = #{lessonDescription} </if>
	</set>
	WHERE lesson_id =#{lessonId} 
</update>

</mapper>


