<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.LessonReviewMapper">

<resultMap id="resultmapAssociation" type="LessonReview" autoMapping="true">
	<id property="reviewId" column="review_id"/>
	<result property="reviewDate" column="review_date"/>
	<result property="reviewContent" column="review_content"/>
	<result property="recommend" column="review_recommendation"/>
	<association property="lps" javaType="LPS">
		<id property="LPSId" column="review_lps_id" />
		<association property="lesson" javaType="Lesson">
			<id property="lessonId" column="lps_lesson_id" />
			<result property="lessonName" column="lesson_name"/>
		</association>
		<association property="student" javaType="Student">
			<id property="studentId" column="lps_student_id" />
			<result property="studentName" column="student_name"/>
		</association>
	</association>
</resultMap>

<select id="adminSelectPerPage" parameterType = "java.util.HashMap" resultMap="resultmapAssociation">
SELECT *
FROM (
	  SELECT review_date, lesson_name, review_recommendation, review_content, student_name, row_number() OVER(ORDER BY review_id DESC) AS rnum 
	  FROM lesson_per_student JOIN review ON lps_id = review_lps_id
                              JOIN student ON lps_student_id = student_id
                              JOIN lesson ON lps_lesson_id = lesson_id
	  )
WHERE rnum BETWEEN fun_start_row(#{currentPage}, #{cnt_per_page}) AND fun_end_row(#{currentPage}, #{cnt_per_page})
</select>

<select id="userSelectPerPage" parameterType = "java.util.HashMap" resultMap="resultmapAssociation">
SELECT *
FROM (
	  SELECT review_date, lesson_name, review_recommendation, review_content, student_name, row_number() OVER(ORDER BY review_id DESC) AS rnum 
	  FROM lesson_per_student JOIN review ON lps_id = review_lps_id
                              JOIN student ON lps_student_id = student_id
                              JOIN lesson ON lps_lesson_id = lesson_id
      WHERE lesson_id = #{lessonId}
	  )
WHERE rnum BETWEEN fun_start_row(#{currentPage}, #{cnt_per_page}) AND fun_end_row(#{currentPage}, #{cnt_per_page})
</select>

<select id="adminSelectCnt" resultType="int">
SELECT COUNT(*)
FROM review
</select>

<select id="userSelectCnt" resultType="int">
SELECT COUNT(*)
FROM lesson_per_student JOIN review ON review_lps_id = lps_id
            			JOIN lesson ON lps_lesson_id = lesson_id
WHERE lesson_id = #{lesson_id}
</select>

<select id="selectByLessonTitleORStudentNamePerPage" parameterType = "java.util.HashMap" resultMap="resultmapAssociation">
SELECT *
FROM (
	  SELECT review_date, lesson_name, review_recommendation, review_content, student_name, row_number() OVER(ORDER BY review_id DESC) AS rnum 
	  FROM lesson_per_student JOIN review ON lps_id = review_lps_id
                              JOIN student ON lps_student_id = student_id
                              JOIN lesson ON lps_lesson_id = lesson_id
      WHERE lesson_name LIKE '%${word}%'
      	OR  student_name LIKE '%${word}%'
	  )
WHERE rnum BETWEEN fun_start_row(#{currentPage}, #{cnt_per_page}) AND fun_end_row(#{currentPage}, #{cnt_per_page})
</select>

<insert id="insert" parameterType="LessonReview">
INSERT INTO review 
			VALUES (seq_review_id.NEXTVAL, SYSDATE, #{reviewContent},#{recommend}, #{lps.LPSId})
</insert>

<delete id="delete" parameterType="int">
DELETE review
WHERE review_id = #{review_id}
</delete>

</mapper>